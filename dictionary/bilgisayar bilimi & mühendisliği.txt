# dictionary application // ferityigitbalaban 2021
# dictionary file
#
# WARNING: DO NOT USE '#' in WORD ENTRIES!
# Any line containing '#' will be treated as a comment and will be ignored.  
#
# Referencing different words in definitions: Define a word as usual, enter as many definitions as you like
# Add "<ref=word_here>" block to definitions, change 'word_here' with your word
# Application will automatically handle this entry and show a link to referenced word 
#
# Adding article URLs: Only one URL link can be added per word.
# Place your URL link in quotes as you would enter definitions. Application uses a Regex condition to find and match URL links. 
# Link will be shown near word label if found.
#
# Next line starting with $ sign specifies words' and definitions' language
$ key to value: en => tr
"mutable": "değişken"
"immutable": "sabit"
"query": "sorgu" "sorgulamak"
"SQL; structured query language": "yapısal sorgulama dili"
"latter": "ikincisi" "son söylenen"
"persistent": "kalıcı"
"CRUD; create, read, update and delete": "Kalıcı depolamanın 4 temel işlemi"
"SoC; seperation of concerns": "sorumlulukların ayrıştırılması"
"decoupling": "ayrıklaştırma" "bağlaşımı kesme"
"coupling": "birleştirme" "bağlama"
"abstraction": "soyutlama"
"aggregate": "kümeleştirmek" "toplamak"
"agile": "atik"
"semantics": "anlam" "anlambilim"
"array": "dizin"
"data structure": "veri yapısı"
"assertion": "sav" "iddia" "onaylama"
"predicate": "belirtim" "dayandırmak"
"associative": "çağrışımsal" "ilişkili"
"automata theory": "soyut makinelerin hesaplama ve problem çözme becerisini inceleyen çalışma alanı"
"discrete mathematics": "ayrık matematik"
"recursive": "tekrarlanan" "özyinelemeli"
"conjunction": "bağlaç" "rastlantı"
"cipher": "şifre" "şifreleme"
"closure": "kapanma"
"lexical": "sözcüksel" "anlamsal"
"daemon": "arkaplan işlemi şeklinde kullanıcıdan bağımsız yürütülen bilgisayar programı"
"relational database": "ilişkisel veritabanı"
"MVC; Model, View, and Controller": "bir uygulamayı Model, Görünüm ve Kontrolcü biçiminde üçe ayıran dizayn paterni"
"MVVM; Model, View, and ViewModel": "bir uygulamayı Model, Görünüm ve Görünüm Modeli biçiminde üçe ayıran dizayn paterni" "bu uygulama MVVM dizayn paterni kullanılarak tasarlandı"
"architectural patterns": "yazılım mimari desenleri"
"dynamic programming": "dinamik programlama" "bir optimizasyon problemini daha basit altproblemlere bölerek çözüm geliştiren algoritmik teknik"
"linear search": "doğrusal arama" "bir liste içinde eleman bulmak için kullanılan yöntemlerden birisi. aranan eleman bulunana veya liste bitene dek her elemana sırayla bakılır" "Ortalama komplekslik: O(n)" "Ortalama performans: O(n/2)"
"binary search": "ikili, ikiye bölerek arama" "sıralanmış bir dizinin arama aralığını sürekli olarak ikiye bölerek aramak" "Ortalama komplekslik: O(log n)" "www.geeksforgeeks.org/binary-search"
"linker; link editor": "bağlayıcı" "bir derleyici veya birleştiricinin çıktısı olan obje dosyalarını alır ve tek bir çalıştırılabilir dosya, kütüphane dosyası veya yeni bir obje dosyasında birleştirir"
"compiler": "derleyici" "bir programlama dili ile yazılmış kaynak kodunu hedef programlama diline çevirmek için kullanılan bilgisayar programı. genellikle yüksek seviyeli programlama dillerinden düşük seviyeli programlama dillerine (assembly dili, obje kodu, makine kodu) çevrim yapar"
"assembler": "birleştirici" "assembly dilindeki kodu makine tarafından yürütülebilir dildeki koda çeviren bilgisayar programı"
"hash function": "belirsiz ve önemsiz boyuttaki veriyi sabit bir boyuttaki bir veriye dönüştüren herhangi bir fonksiyon"
"stack": "yığıt" "miktarı, boyutu, türü bilinen değişkenlerin statik olarak (derleme sırasında) saklandığı bellek bölümü" "<ref=heap>"
"heap": "yığın" "çalışma zamanında oluşturulan referans tipli değişkenlerin, nesnelerin dinamik olarak saklandığı bellek bölümü" "<ref=stack>"
"bit": "BInary digiT'in kısaltması, ikili sistemde rakam" "0 veya 1 değerini alan sayı"
"declare": "beyan etmek" "ilan etmek" "kaynak kodda bir değişken için bellekten alan ayrılmasını sağlama, değişken deklarasyonu"
"define": "tanımlamak" "tayin etmek" "kaynak kodda deklare edilmiş bir değişkene bir veri atamak, değişkeni tanımlamak" 
"inheritance": "kalıtım" "nesne yönelimli programlamada bir nesne veya sınıfın bir başka (temel) sınıftan türetilebilmesi özelliği"
"polymorphism": "çok biçimlilik" "nesne yönelimli programlamada bir metodun farklı çağrılarda farklı tipteki değişkenler ile çalışabilir olması özelliği"
"encapsulation": "gizleme" "enkapsülasyon" "nesne yönelimli programlamada sınıfların içerdiği özellik ve metotlarının dışarıdan görünür ve ulaşılır olma seviyesini belirleyebilme özelliği"
"insertion sort": "yerleştirmeli sıralama" "https://www.geeksforgeeks.org/insertion-sort/"
"heapsort": "https://www.geeksforgeeks.org/heap-sort/" "dikey sıralama"
"interpreter": "yorumlayıcı" "bir programlama/scripting diliyle yazılmış koddaki komutları derlemeye ihtiyaç kalmadan çalıştıran bilgisayar programı" "O(n²)"
"iteration":
"time complexity": "zaman karmaşıklığı" "girişinin boyutuna bağlı olarak bir algoritmanın çalışma süresi"
"kernel":
"logic programming":
"methodology":
"NLP; natural language processing":
"OOP; object oriented programming":
"pointer":
"symbolic computation":
"serializability":
"serialization":
"round-off error:"
"quicksort":
"program lifecycle phase":
"object code":
"stream": 
"V-Model":